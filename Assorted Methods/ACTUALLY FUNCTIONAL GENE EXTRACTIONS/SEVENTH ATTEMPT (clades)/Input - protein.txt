DURING DATA SELECTION REMEMBER TO FILTER BY CANDIDA AND CANDIDOZYMA AURIS (or just correctly)

makeblastdb -in chromosome3.fasta -dbtype nucl -out nuclDB

tblastn -query ProteinCAClust.fasta -db nuclDB \
  -outfmt "6 qseqid sseqid pident length qstart qend sstart send evalue bitscore" \
  -out _hits.tsv 

??  
awk -F'\t' '$3 >= 75' _hits.tsv > hits.tsv

??
MANUALLY RENAME THE OLD FILE TO SOMETHING AND THEN RENAME 75 (JUST CHECK INPUTS FOR BEDANDGFF)

python bedAndgff.py

sed '/^>/ s/ .*//' Chromosome3.fasta > trimmedC3.fasta
 trim headers

split into pul1234 and THEN

awk '$4 ~ /PUL1\|/' output.bed > PUL1_regions.bed
awk '$4 ~ /PUL2\|/' output.bed > PUL2_regions.bed
awk '$4 ~ /PUL3\|/' output.bed > PUL3_regions.bed
awk '$4 ~ /PUL4\|/' output.bed > PUL4_regions.bed

OR

awk -F'\t' 'tolower($4) ~ /pul1\|/' output.bed > PUL1_regions.bed
awk -F'\t' 'tolower($4) ~ /pul2\|/' output.bed > PUL2_regions.bed
awk -F'\t' 'tolower($4) ~ /pul3\|/' output.bed > PUL3_regions.bed
awk -F'\t' 'tolower($4) ~ /pul4\|/' output.bed > PUL4_regions.bed


bedtools getfasta -fi trimmedC3.fasta -bed PUL1_regions.bed -fo PUL1_sequences.fa -s
bedtools getfasta -fi trimmedC3.fasta -bed PUL2_regions.bed -fo PUL2_sequences.fa -s
bedtools getfasta -fi trimmedC3.fasta -bed PUL3_regions.bed -fo PUL3_sequences.fa -s
bedtools getfasta -fi trimmedC3.fasta -bed PUL4_regions.bed -fo PUL4_sequences.fa -s

works perfectly.
excellent!
it actually does work perfectly wow good job past me nice pipeline!

TRANSLATE (FIX USING GENEWISE) > MAFFT ALIGN > PAL2NAL


I NEED TO SPLIT BY SPECIES FOR VARIANT CALLING.

awk '{print > $1".bed"}' output.bed

